[{"path":[]},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"proposing-changes-with-issues","dir":"","previous_headings":"","what":"Proposing changes with issues","title":"Contributing to MOSuite","text":"want make change, ’s good idea first open issue make sure someone team agrees ’s needed. ’ve decided work issue, assign issue others know ’re working .","code":""},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to MOSuite","text":"use GitHub Flow collaboration process. Follow steps detailed instructions contributing changes MOSuite.","code":""},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"clone-the-repo","dir":"","previous_headings":"Pull request process","what":"Clone the repo","title":"Contributing to MOSuite","text":"member CCBR, can clone repository computer development environment. Otherwise, first need fork repo clone fork. need step . Cloning ‘MOSuite’…  remote: Enumerating objects: 1136, done.  remote: Counting objects: 100% (463/463), done.  remote: Compressing objects: 100% (357/357), done.  remote: Total 1136 (delta 149), reused 332 (delta 103), pack-reused 673  Receiving objects: 100% (1136/1136), 11.01 MiB | 9.76 MiB/s, done.  Resolving deltas: 100% (530/530), done.","code":"git clone https://github.com/CCBR/MOSuite cd MOSuite"},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"if-this-is-your-first-time-cloning-the-repo-install-dependencies","dir":"","previous_headings":"Pull request process","what":"If this is your first time cloning the repo, install dependencies","title":"Contributing to MOSuite","text":"R console, install R development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Install pre-commit don’t already . repo’s root directory, run install repo’s pre-commit hooks. ’ll need step first time clone repo.","code":"pre-commit install"},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"create-a-branch","dir":"","previous_headings":"Pull request process","what":"Create a branch","title":"Contributing to MOSuite","text":"Create Git branch pull request (PR). Give branch descriptive name changes make, iss-10 specific issue. Switched new branch ‘iss-10’","code":"# create a new branch and switch to it git branch iss-10 git switch iss-10"},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"make-your-changes","dir":"","previous_headings":"Pull request process","what":"Make your changes","title":"Contributing to MOSuite","text":"Edit code, write unit tests, update documentation needed.","code":""},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"style","dir":"","previous_headings":"Pull request process > Make your changes","what":"style","title":"Contributing to MOSuite","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. brief overview conventions according tidyverse style guide: object names (variables functions) snake_case function names use verbs possible use <- assignment use pipes chain operations single object Please see tidyverse style guide details.","code":""},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"test","dir":"","previous_headings":"Pull request process > Make your changes","what":"test","title":"Contributing to MOSuite","text":"changes code also need unit tests demonstrate changes work intended. Use testthat create unit tests test code. Test files organized described https://style.tidyverse.org/tests.html. Take look existing code package examples.","code":""},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"document","dir":"","previous_headings":"Pull request process > Make your changes","what":"document","title":"Contributing to MOSuite","text":"written new function changed API existing function, need update function’s documentation using roxygen2 Markdown syntax. See instructions writing roxygen2 comments : https://r-pkgs.org/man.html. function used vignette, may also need update vignette.","code":""},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"check","dir":"","previous_headings":"Pull request process > Make your changes","what":"check","title":"Contributing to MOSuite","text":"making changes, run devtools::check() R console make sure package still passes R CMD check.","code":""},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"commit-and-push-your-changes","dir":"","previous_headings":"Pull request process","what":"Commit and push your changes","title":"Contributing to MOSuite","text":"’re sure often commit commits consist , recommend following “atomic commits” principle commit contains one new feature, fix, task. Learn atomic commits : https://www.freshconsulting.com/insights/blog/atomic-commits/ First, add files changed staging area: make commit. commit message follow Conventional Commits specification. Briefly, commit start one approved types feat, fix, docs, etc. followed description commit. Take look Conventional Commits specification detailed information write commit messages. pre-commit enforce commit message code changes styled correctly attempt make corrections needed. Check added large files……………………………………….Passed  Fix End Files…………………………………………………Passed  Trim Trailing Whitespace………………………………………….Failed  - hook id: trailing-whitespace  - exit code: 1  - files modified hook  Fixing path//changed/files/file.txt  codespell……………………………………………………….Passed  style-files……………………………………(files check)Skipped  readme-rmd-rendered…………………………….(files check)Skipped  use-tidy-description……………………………(files check)Skipped example , one hooks modified file proposed commit, pre-commit check failed. can run git diff see changes pre-commit made git status see files modified. proceed commit, re-add modified file(s) re-run commit command: time, hooks either passed skipped (e.g. hooks run R code run R files committed). pre-commit check successful, usual commit success message appear pre-commit messages showing commit created. Check added large files……………………………………….Passed  Fix End Files…………………………………………………Passed  Trim Trailing Whitespace………………………………………….Passed  codespell……………………………………………………….Passed  style-files……………………………………(files check)Skipped  readme-rmd-rendered…………………………….(files check)Skipped  use-tidy-description……………………………(files check)Skipped  Conventional Commit………………………………………………Passed  [iss-10 9ff256e] feat: create function awesome feature  1 file changed, 22 insertions(+), 3 deletions(-) Finally, push changes GitHub: first time pushing branch, may explicitly set upstream branch: Enumerating objects: 7, done.  Counting objects: 100% (7/7), done.  Delta compression using 10 threads  Compressing objects: 100% (4/4), done.  Writing objects: 100% (4/4), 648 bytes | 648.00 KiB/s, done.  Total 4 (delta 3), reused 0 (delta 0), pack-reused 0  remote: Resolving deltas: 100% (3/3), completed 3 local objects.  remote:  remote: Create pull request ‘iss-10’ GitHub visiting:  remote: https://github.com/CCBR/MOSuite/pull/new/iss-10  remote:  https://github.com/CCBR/MOSuite  [new branch] iss-10 -> iss-10  branch ‘iss-10’ set track ‘origin/iss-10’. recommend pushing commits often backed GitHub. can view files branch GitHub https://github.com/CCBR/MOSuite/tree/<-branch-name> (replace <-branch-name> actual name branch).","code":"git add path/to/changed/files/ git commit -m 'feat: create function for awesome feature' git add path/to/changed/files/file.txt git commit -m 'feat: create function for awesome feature' git push git push --set-upstream origin iss-10"},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"create-the-pr","dir":"","previous_headings":"Pull request process","what":"Create the PR","title":"Contributing to MOSuite","text":"branch ready, create PR GitHub: https://github.com/CCBR/MOSuite/pull/new/ Select branch just pushed: Edit PR title description. title briefly describe change. Follow comments template fill body PR, can delete comments (everything <!-- -->) go. ’re ready, click ‘Create pull request’ open . Optionally, can mark PR draft ’re yet ready reviewed, change later ’re ready.","code":""},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"wait-for-a-maintainer-to-review-your-pr","dir":"","previous_headings":"Pull request process","what":"Wait for a maintainer to review your PR","title":"Contributing to MOSuite","text":"best follow tidyverse code review principles: https://code-review.tidyverse.org/. reviewer may suggest make changes accepting PR order improve code quality style. ’s case, continue make changes branch push GitHub, appear PR. PR approved, maintainer merge issue(s) PR links close automatically. Congratulations thank contribution!","code":""},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"after-your-pr-has-been-merged","dir":"","previous_headings":"Pull request process","what":"After your PR has been merged","title":"Contributing to MOSuite","text":"PR merged, update local clone repo switching main branch pulling latest changes: ’s good idea run git pull creating new branch start recent commits main.","code":"git checkout main git pull"},{"path":"https://ccbr.github.io/MOSuite/CONTRIBUTING.html","id":"helpful-links-for-more-information","dir":"","previous_headings":"","what":"Helpful links for more information","title":"Contributing to MOSuite","text":"contributing guide adapted tidyverse contributing guide GitHub Flow tidyverse style guide tidyverse code review principles reproducible examples R packages book usethis devtools testthat styler roxygen2","code":""},{"path":"https://ccbr.github.io/MOSuite/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 CCR Collaborative Bioinformatics Resource Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":[]},{"path":"https://ccbr.github.io/MOSuite/PULL_REQUEST_TEMPLATE.html","id":"pr-checklist","dir":"","previous_headings":"","what":"PR Checklist","title":"NA","text":"(Strikethrough points applicable.) comment contains description changes justifications, relevant issues linked. Write unit tests new features, bug fixes, code changes. Update docs API changes (roxygen2 comments, vignettes, readme, etc.). Update NEWS.md short description user-facing changes reference PR number. Follow style described https://style.tidyverse.org/news.html Run devtools::check() locally fix notes, warnings, errors.","code":""},{"path":"https://ccbr.github.io/MOSuite/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kelly Sovacool. Author, maintainer. Philip Homan. Author. Vishal Koparde. Author. Samantha Chill. Author. CCR Collaborative Bioinformatics Resource. Copyright holder.","code":""},{"path":"https://ccbr.github.io/MOSuite/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sovacool K, Homan P, Koparde V, Chill S (2025). MOSuite: R package downstream multi-omics analysis. R package version 0.0.0.9000, https://ccbr.github.io/MOSuite/, https://github.com/CCBR/MOSuite.","code":"@Manual{,   title = {MOSuite: R package for downstream multi-omics analysis},   author = {Kelly Sovacool and Philip Homan and Vishal Koparde and Samantha Chill},   year = {2025},   note = {R package version 0.0.0.9000, https://ccbr.github.io/MOSuite/},   url = {https://github.com/CCBR/MOSuite}, }"},{"path":"https://ccbr.github.io/MOSuite/index.html","id":"mosuite","dir":"","previous_headings":"","what":"R package for downstream multi-omics analysis","title":"R package for downstream multi-omics analysis","text":"R package downstream multi-omics analysis Designed differential RNA-seq analysis data represented counts table. See website information, documentation, examples: https://ccbr.github.io/MOSuite/","code":""},{"path":"https://ccbr.github.io/MOSuite/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R package for downstream multi-omics analysis","text":"can install development version MOSuite GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"CCBR/MOSuite\")"},{"path":"https://ccbr.github.io/MOSuite/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R package for downstream multi-omics analysis","text":"Please see introductory vignette quick start tutorial. Take look reference documentation detailed information function package.","code":""},{"path":"https://ccbr.github.io/MOSuite/index.html","id":"help--contributing","dir":"","previous_headings":"","what":"Help & Contributing","title":"R package for downstream multi-omics analysis","text":"Come across bug? Open issue include minimal reproducible example. question? Ask discussions. Want contribute project? Check contributing guidelines.","code":""},{"path":"https://ccbr.github.io/MOSuite/index.html","id":"development-roadmap","dir":"","previous_headings":"","what":"Development Roadmap","title":"R package for downstream multi-omics analysis","text":"dev spreadsheet project board","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/MOSuite-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MOSuite: R helper functions for RENEE — MOSuite-package","title":"MOSuite: R helper functions for RENEE — MOSuite-package","text":"MOSuite implements helper functions RENEE, comprehensive quality-control quantification RNA-seq pipeline","code":""},{"path":[]},{"path":"https://ccbr.github.io/MOSuite/reference/MOSuite-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MOSuite: R helper functions for RENEE — MOSuite-package","text":"Maintainer: Kelly Sovacool kelly.sovacool@nih.gov (ORCID) Authors: Philip Homan philip.homan@nih.gov Vishal Koparde vishal.koparde@nih.gov (ORCID) Samantha Chill samantha.chill@nih.gov (ORCID) contributors: CCR Collaborative Bioinformatics Resource [copyright holder]","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/aggregate_duplicate_gene_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate duplicate gene names — aggregate_duplicate_gene_names","title":"Aggregate duplicate gene names — aggregate_duplicate_gene_names","text":"Aggregate duplicate gene names","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/aggregate_duplicate_gene_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate duplicate gene names — aggregate_duplicate_gene_names","text":"","code":"aggregate_duplicate_gene_names(   raw_counts_matrix,   gene_names_column,   gene_name_column_to_use_for_collapsing_duplicates,   data_type,   aggregate_rows_with_duplicate_gene_names,   split_gene_name )"},{"path":"https://ccbr.github.io/MOSuite/reference/aggregate_duplicate_gene_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate duplicate gene names — aggregate_duplicate_gene_names","text":"raw_counts_matrix dataframe raw counts data gene_names_column column input Counts Matrix containing Feature IDs (Usually Gene Protein ID). usually first column input Counts Matrix. columns Text type input Counts Matrix available select parameter. gene_name_column_to_use_for_collapsing_duplicates Select column Feature IDs use grouping elements collapse counts matrix. log output list columns available identify duplicate row IDs order aggregate information. data_type \"Bulk RNAseq\", column selected Feature ID renamed \"Gene\". data_type \"Proteomics\", column selected Feature ID renamed \"Feature ID\". left blank \"Feature ID\" Column used Aggregate Rows. \"Feature ID\" column can split multiple IDs non Ensembl ID name used aggregate duplicate IDs. \"Feature ID\" column contain Ensembl IDs split Feature IDs named 'Feature_id_1' 'Feature_id_2'. case error occur manually enter Column ID field. data_type Type data process. Options: c(\"Bulk RNAseq\", \"Proteomics\") aggregate_rows_with_duplicate_gene_names Feature ID (\"Cleanup Column Names\" parameter ) found duplicated multiple rows raw counts, Log report Feature IDs. Using default behavior (TRUE), counts rows duplicate Feature IDs aggregated single row. Counts summed across duplicate Feature ID rows within sample. Additional identifier columns, present (e.g. Ensembl IDs), preserved multiple matching identifiers additional columns appear comma-separated values aggregated row. split_gene_name TRUE, split gene name column special characters: ,|_-:","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/aggregate_duplicate_gene_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate duplicate gene names — aggregate_duplicate_gene_names","text":"data frame columns separated possible","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/as_integer_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert all numeric columns in a dataframe to integers — as_integer_df","title":"Convert all numeric columns in a dataframe to integers — as_integer_df","text":"Round doubles integers convert integer type","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/as_integer_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert all numeric columns in a dataframe to integers — as_integer_df","text":"","code":"as_integer_df(counts_tbl)"},{"path":"https://ccbr.github.io/MOSuite/reference/as_integer_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert all numeric columns in a dataframe to integers — as_integer_df","text":"counts_tbl data frame numeric columns","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/as_integer_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert all numeric columns in a dataframe to integers — as_integer_df","text":"data frame numeric columns integers","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/as_integer_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert all numeric columns in a dataframe to integers — as_integer_df","text":"","code":"if (FALSE) { # \\dontrun{ data.frame(a = c(0, 0.1, 2.3, 5L, 6.9)) %>% as_integer_df() } # }"},{"path":"https://ccbr.github.io/MOSuite/reference/calc_cpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate counts-per-million (CPM) on raw counts in a multiOmicDataSet — calc_cpm","title":"Calculate counts-per-million (CPM) on raw counts in a multiOmicDataSet — calc_cpm","text":"Calculate counts-per-million (CPM) raw counts multiOmicDataSet","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/calc_cpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate counts-per-million (CPM) on raw counts in a multiOmicDataSet — calc_cpm","text":"","code":"calc_cpm(moo, ...)"},{"path":"https://ccbr.github.io/MOSuite/reference/calc_cpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate counts-per-million (CPM) on raw counts in a multiOmicDataSet — calc_cpm","text":"moo multiOmicDataSet object ... additional arguments pass edgeR::cpm()","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/calc_cpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate counts-per-million (CPM) on raw counts in a multiOmicDataSet — calc_cpm","text":"multiOmicDataSet cpm-transformed counts","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/calc_cpm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate counts-per-million (CPM) on raw counts in a multiOmicDataSet — calc_cpm","text":"","code":"sample_meta <- data.frame(   sample_id = c(\"KO_S3\", \"KO_S4\", \"WT_S1\", \"WT_S2\"),   condition = factor(     c(\"knockout\", \"knockout\", \"wildtype\", \"wildtype\"),     levels = c(\"wildtype\", \"knockout\")   ) ) moo <- create_multiOmicDataSet_from_dataframes(sample_meta, gene_counts) %>%   calc_cpm() head(moo@counts$cpm) #>                      gene_id KO_S3 KO_S4 WT_S1 WT_S2 #> 1    ENSG00000121410.11|A1BG     0     0     0     0 #> 2 ENSG00000268895.5|A1BG-AS1     0     0     0     0 #> 3    ENSG00000148584.15|A1CF     0     0     0     0 #> 4     ENSG00000175899.14|A2M     0     0     0     0 #> 5  ENSG00000245105.3|A2M-AS1     0     0     0     0 #> 6   ENSG00000166535.20|A2ML1     0     0     0     0"},{"path":"https://ccbr.github.io/MOSuite/reference/calc_cpm_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate CPM on a data frame — calc_cpm_df","title":"Calculate CPM on a data frame — calc_cpm_df","text":"Calculate CPM data frame","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/calc_cpm_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate CPM on a data frame — calc_cpm_df","text":"","code":"calc_cpm_df(dat, gene_colname = \"gene_id\", ...)"},{"path":"https://ccbr.github.io/MOSuite/reference/calc_cpm_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate CPM on a data frame — calc_cpm_df","text":"dat data frame counts gene column gene_colname name gene column (default: \"gene_id\") ... additional arguments pass edger::cpm()","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/calc_cpm_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate CPM on a data frame — calc_cpm_df","text":"cpm-transformed counts data frame","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/check_sample_names.html","id":null,"dir":"Reference","previous_headings":"","what":"check sample names in metadata & counts data — check_sample_names","title":"check sample names in metadata & counts data — check_sample_names","text":"check sample names metadata & counts data","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/check_sample_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check sample names in metadata & counts data — check_sample_names","text":"","code":"check_sample_names(counts, metadata, sample_names_column)"},{"path":"https://ccbr.github.io/MOSuite/reference/check_sample_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check sample names in metadata & counts data — check_sample_names","text":"counts dataframe containing counts data metadata dataframe containing sample metadata sample_names_column column input Sample Metadata table containing sample names. names column must exactly match names used sample column names input Counts Matrix. columns Text type input Sample Metadata table available select parameter.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/clean_raw_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Raw Counts — clean_raw_counts","title":"Clean Raw Counts — clean_raw_counts","text":"Clean Raw Counts","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/clean_raw_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Raw Counts — clean_raw_counts","text":"","code":"clean_raw_counts(   moo,   count_type = \"raw\",   sample_names_column = \"Sample\",   gene_names_column = \"GeneName\",   samples_to_rename = c(\"\"),   data_type = \"Bulk RNAseq\",   cleanup_column_names = TRUE,   split_gene_name = TRUE,   aggregate_rows_with_duplicate_gene_names = TRUE,   gene_name_column_to_use_for_collapsing_duplicates = \"\" )"},{"path":"https://ccbr.github.io/MOSuite/reference/clean_raw_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Raw Counts — clean_raw_counts","text":"moo multiOmicDataSet object (see create_multiOmicDataSet_from_dataframes()) count_type type counts use – must name counts slot (moo@counts) sample_names_column column input Sample Metadata table containing sample names. names column must exactly match names used sample column names input Counts Matrix. columns Text type input Sample Metadata table available select parameter. gene_names_column column input Counts Matrix containing Feature IDs (Usually Gene Protein ID). usually first column input Counts Matrix. columns Text type input Counts Matrix available select parameter. samples_to_rename Plot Labels Column sample metadata table, can use parameter rename samples manually display PCA plot. Use \"Add item\" add additional sample renaming. Use following format describe old name (sample metadata table) want rename new name: old_name: new_name data_type Type data process. Options: c(\"Bulk RNAseq\", \"Proteomics\") cleanup_column_names Invalid raw counts column names can cause errors downstream analysis. TRUE, invalid column names automatically altered correct format. format changes include adding \"X\" first character column name began numeral replacing special characters (\"-,:. \") underscores (\"_\"). Invalid sample names changes made detailed template log. split_gene_name TRUE, split gene name column special characters: ,|_-: aggregate_rows_with_duplicate_gene_names Feature ID (\"Cleanup Column Names\" parameter ) found duplicated multiple rows raw counts, Log report Feature IDs. Using default behavior (TRUE), counts rows duplicate Feature IDs aggregated single row. Counts summed across duplicate Feature ID rows within sample. Additional identifier columns, present (e.g. Ensembl IDs), preserved multiple matching identifiers additional columns appear comma-separated values aggregated row. gene_name_column_to_use_for_collapsing_duplicates Select column Feature IDs use grouping elements collapse counts matrix. log output list columns available identify duplicate row IDs order aggregate information. data_type \"Bulk RNAseq\", column selected Feature ID renamed \"Gene\". data_type \"Proteomics\", column selected Feature ID renamed \"Feature ID\". left blank \"Feature ID\" Column used Aggregate Rows. \"Feature ID\" column can split multiple IDs non Ensembl ID name used aggregate duplicate IDs. \"Feature ID\" column contain Ensembl IDs split Feature IDs named 'Feature_id_1' 'Feature_id_2'. case error occur manually enter Column ID field.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/clean_raw_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Raw Counts — clean_raw_counts","text":"multiOmicDataSet cleaned counts","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/clean_raw_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Raw Counts — clean_raw_counts","text":"","code":"moo <- create_multiOmicDataSet_from_dataframes(   as.data.frame(nidap_sample_metadata),   as.data.frame(nidap_raw_counts),   sample_id_colname = \"Sample\", ) %>%   clean_raw_counts(sample_names_column = \"Sample\", gene_names_column = \"GeneName\") #>   . #>  A1 #>  A2 #>  A3 #>  B1 #>  B2 #>  B3 #>  C1 #>  C2 #>  C3 #> [1] \"\" #> [1] \"Not able to identify multiple id's in GeneName\" #> [1] \"\" #> [1] \"Columns that can be used to aggregate gene information\" #> [1] \"Gene\" #> [1] \"\" #> [1] \"Aggregating the counts for the same ID in different chromosome locations.\" #> [1] \"Column used to Aggregate duplicate IDs: \" #> [1] \"Gene\" #> [1] \"Number of rows before Collapse: \" #> [1] 43280 #> [1] \"no duplicated IDs in Gene\" #> [1] \"Bulk RNAseq\"  head(moo@counts$clean) #>            Gene A1 A2 A3 B1 B2 B3 C1 C2 C3 #> 1 RP23-271O17.1  0  0  0  0  0  0  0  0  0 #> 2       Gm26206  0  0  0  0  0  0  0  0  0 #> 3          Xkr4  0  0  0  0  0  0  0  0  0 #> 4 RP23-317L18.1  0  0  0  0  0  0  0  0  0 #> 5 RP23-317L18.4  0  0  0  0  0  0  0  0  0 #> 6 RP23-317L18.3  0  0  0  0  0  0  0  0  0"},{"path":"https://ccbr.github.io/MOSuite/reference/counts_dat_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","title":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","text":"Convert data frame gene counts matrix","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/counts_dat_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","text":"","code":"counts_dat_to_matrix(counts_tbl, gene_colname = \"gene_id\")"},{"path":"https://ccbr.github.io/MOSuite/reference/counts_dat_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","text":"counts_tbl expected gene counts RSEM data frame tibble.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/counts_dat_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","text":"matrix gene counts rows gene IDs","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/counts_dat_to_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","text":"","code":"if (FALSE) { # \\dontrun{ counts_dat_to_matrix(head(gene_counts)) } # }"},{"path":"https://ccbr.github.io/MOSuite/reference/create_multiOmicDataSet_from_dataframes.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a multiOmicDataSet object from data frames — create_multiOmicDataSet_from_dataframes","title":"Construct a multiOmicDataSet object from data frames — create_multiOmicDataSet_from_dataframes","text":"Construct multiOmicDataSet object data frames","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/create_multiOmicDataSet_from_dataframes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a multiOmicDataSet object from data frames — create_multiOmicDataSet_from_dataframes","text":"","code":"create_multiOmicDataSet_from_dataframes(   sample_meta_dat,   count_dat,   sample_id_colname = \"sample_id\",   count_type = \"raw\" )"},{"path":"https://ccbr.github.io/MOSuite/reference/create_multiOmicDataSet_from_dataframes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a multiOmicDataSet object from data frames — create_multiOmicDataSet_from_dataframes","text":"sample_meta_dat sample metadata data frame tibble. Must contain sample_id column. count_dat data frame feature counts (e.g. expected gene counts RSEM) sample_id_colname name column sample_meta_filepath contains sample IDs count_type type assign values gene_counts_filepath counts slot","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/create_multiOmicDataSet_from_dataframes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a multiOmicDataSet object from data frames — create_multiOmicDataSet_from_dataframes","text":"multiOmicDataSet object","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/create_multiOmicDataSet_from_dataframes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a multiOmicDataSet object from data frames — create_multiOmicDataSet_from_dataframes","text":"","code":"sample_meta <- data.frame(   sample_id = c(\"KO_S3\", \"KO_S4\", \"WT_S1\", \"WT_S2\"),   condition = factor(     c(\"knockout\", \"knockout\", \"wildtype\", \"wildtype\"),     levels = c(\"wildtype\", \"knockout\")   ) ) create_multiOmicDataSet_from_dataframes(sample_meta, gene_counts) #> <MOSuite::multiOmicDataSet> #>  @ sample_meta:'data.frame':\t4 obs. of  2 variables: #>  .. $ sample_id: chr  \"KO_S3\" \"KO_S4\" \"WT_S1\" \"WT_S2\" #>  .. $ condition: Factor w/ 2 levels \"wildtype\",\"knockout\": 2 2 1 1 #>  @ counts     :List of 1 #>  .. $ raw: spc_tbl_ [58,929 × 5] (S3: spec_tbl_df/tbl_df/tbl/data.frame) #>  ..  ..$ gene_id: 'glue' chr [1:58929] \"ENSG00000121410.11|A1BG\" \"ENSG00000268895.5|A1BG-AS1\" \"ENSG00000148584.15|A1CF\" \"ENSG00000175899.14|A2M\" ... #>  ..  ..$ KO_S3  : num [1:58929] 0 0 0 0 0 0 0 0 0 0 ... #>  ..  ..$ KO_S4  : num [1:58929] 0 0 0 0 0 0 0 0 0 0 ... #>  ..  ..$ WT_S1  : num [1:58929] 0 0 0 0 0 0 0 0 0 0 ... #>  ..  ..$ WT_S2  : num [1:58929] 0 0 0 0 0 0 0 0 0 0 ... #>  ..  ..- attr(*, \"spec\")=List of 3 #>  ..  .. ..$ cols   :List of 6 #>  ..  .. .. ..$ gene_id : list() #>  ..  .. .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>  ..  .. .. ..$ GeneName: list() #>  ..  .. .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>  ..  .. .. ..$ KO_S3   : list() #>  ..  .. .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>  ..  .. .. ..$ KO_S4   : list() #>  ..  .. .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>  ..  .. .. ..$ WT_S1   : list() #>  ..  .. .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>  ..  .. .. ..$ WT_S2   : list() #>  ..  .. .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>  ..  .. ..$ default: list() #>  ..  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_guess\" \"collector\" #>  ..  .. ..$ delim  : chr \"\\t\" #>  ..  .. ..- attr(*, \"class\")= chr \"col_spec\" #>  ..  ..- attr(*, \"problems\")=<externalptr>  #>  @ analyses   : list()"},{"path":"https://ccbr.github.io/MOSuite/reference/create_multiOmicDataSet_from_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a multiOmicDataSet object from tsv files. — create_multiOmicDataSet_from_files","title":"Construct a multiOmicDataSet object from tsv files. — create_multiOmicDataSet_from_files","text":"Construct multiOmicDataSet object tsv files.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/create_multiOmicDataSet_from_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a multiOmicDataSet object from tsv files. — create_multiOmicDataSet_from_files","text":"","code":"create_multiOmicDataSet_from_files(   sample_meta_filepath,   gene_counts_filepath,   count_type = \"raw\",   sample_id_colname = \"sample_id\" )"},{"path":"https://ccbr.github.io/MOSuite/reference/create_multiOmicDataSet_from_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a multiOmicDataSet object from tsv files. — create_multiOmicDataSet_from_files","text":"sample_meta_filepath path tsv file sample IDs metadata differential analysis. gene_counts_filepath path tsv file expected gene counts RSEM. count_type type assign values gene_counts_filepath counts slot sample_id_colname name column sample_meta_filepath contains sample IDs","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/create_multiOmicDataSet_from_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a multiOmicDataSet object from tsv files. — create_multiOmicDataSet_from_files","text":"multiOmicDataSet object","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/create_multiOmicDataSet_from_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a multiOmicDataSet object from tsv files. — create_multiOmicDataSet_from_files","text":"","code":"moo <- create_multiOmicDataSet_from_files(   sample_meta_filepath = system.file(\"extdata\",     \"sample_metadata.tsv.gz\",     package = \"MOSuite\"   ),   gene_counts_filepath = system.file(\"extdata\",     \"RSEM.genes.expected_count.all_samples.txt.gz\",     package = \"MOSuite\"   ) ) #> Rows: 58929 Columns: 6 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): gene_id, GeneName #> dbl (4): KO_S3, KO_S4, WT_S1, WT_S2 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 4 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): sample_id, condition #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. moo@counts$raw %>% head() #> # A tibble: 6 × 5 #>   gene_id                    KO_S3 KO_S4 WT_S1 WT_S2 #>   <glue>                     <dbl> <dbl> <dbl> <dbl> #> 1 ENSG00000121410.11|A1BG        0     0     0     0 #> 2 ENSG00000268895.5|A1BG-AS1     0     0     0     0 #> 3 ENSG00000148584.15|A1CF        0     0     0     0 #> 4 ENSG00000175899.14|A2M         0     0     0     0 #> 5 ENSG00000245105.3|A2M-AS1      0     0     0     0 #> 6 ENSG00000166535.20|A2ML1       0     0     0     0 moo@sample_meta #> # A tibble: 4 × 2 #>   sample_id condition #>   <chr>     <chr>     #> 1 KO_S3     knockout  #> 2 KO_S4     knockout  #> 3 WT_S1     wildtype  #> 4 WT_S2     wildtype"},{"path":"https://ccbr.github.io/MOSuite/reference/filter_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter low counts — filter_counts","title":"Filter low counts — filter_counts","text":"often first step QC portion analysis filter features low raw counts across samples.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/filter_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter low counts — filter_counts","text":"","code":"filter_counts(   moo,   count_type = \"clean\",   gene_names_column = \"gene_id\",   sample_names_column = \"sample_id\",   group_column = \"Group\",   label_column = \"Label\",   columns_to_include = c(\"Gene\", \"A1\", \"A2\", \"A3\", \"B1\", \"B2\", \"B3\", \"C1\", \"C2\", \"C3\"),   outlier_samples_to_remove = c(),   minimum_count_value_to_be_considered_nonzero = 8,   minimum_number_of_samples_with_nonzero_counts_in_total = 7,   minimum_number_of_samples_with_nonzero_counts_in_a_group = 3,   use_cpm_counts_to_filter = TRUE,   use_group_based_filtering = FALSE,   principal_component_on_x_axis = 1,   principal_component_on_y_axis = 2,   legend_position_for_pca = \"top\",   point_size_for_pca = 1,   add_label_to_pca = TRUE,   label_font_size = 3,   label_offset_y_ = 2,   label_offset_x_ = 2,   samples_to_rename = c(\"\"),   color_histogram_by_group = FALSE,   set_min_max_for_x_axis_for_histogram = FALSE,   minimum_for_x_axis_for_histogram = -1,   maximum_for_x_axis_for_histogram = 1,   legend_position_for_histogram = \"top\",   legend_font_size_for_histogram = 10,   number_of_histogram_legend_columns = 6,   colors_for_plots = c(\"indigo\", \"carrot\", \"lipstick\", \"turquoise\", \"lavender\", \"jade\",     \"coral\", \"azure\", \"green\", \"rum\", \"orange\", \"olive\"),   number_of_image_rows = 2,   make_plots_interactive = FALSE,   plot_correlation_matrix_heatmap = TRUE,   make_plots = TRUE )"},{"path":"https://ccbr.github.io/MOSuite/reference/filter_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter low counts — filter_counts","text":"moo multiOmicDataSet object (see create_multiOmicDataSet_from_dataframes()) count_type type counts use – must name counts slot (moo@counts) gene_names_column column input Counts Matrix containing Feature IDs (Usually Gene Protein ID). usually first column input Counts Matrix. columns Text type input Counts Matrix available select parameter. sample_names_column column input Sample Metadata table containing sample names. names column must exactly match names used sample column names input Counts Matrix. columns Text type input Sample Metadata table available select parameter. group_column column input Sample Metadata table containing sample group information. usually column showing experimental treatments sample belongs (e.g. WildType, Knockout, Tumor, Normal, , , etc.). columns Text type input Sample Metadata available select parameter. label_column column input Sample Metadata table containing sample labels wish appear plots produced template. can Sample Names Column. However, may desire different labels display figure (e.g. shorter labels sometimes preferred plots). case, select column preferred Labels . selected column contain unique names sample. columns_to_include Columns like include? Usually, choose feature ID column (e.g. gene protein ID) sample columns. Columns excluded removed step analysis downstream step. outlier_samples_to_remove list sample names remove analysis. minimum_count_value_to_be_considered_nonzero Minimum count value considered non-zero sample minimum_number_of_samples_with_nonzero_counts_in_total Minimum number samples (total) non-zero counts minimum_number_of_samples_with_nonzero_counts_in_a_group keeps genes least number samples nonzero CPM counts least one group use_cpm_counts_to_filter transformation performed counts matrix (eg Raw Counts) set TRUE. TRUE counts transformed CPM filtered based given criteria. gene counts matrix transformed (eg log2, CPM, FPKM form Normalization) set FALSE. FALSE transformation applied features filtered . RNAseq data RAW counts transformed CPM order properly filter. use_group_based_filtering TRUE, keeps features (e.g. genes) least certain number samples nonzero CPM counts least one group principal_component_on_x_axis principle component plot x-axis PCA plot. Choices include 1, 2, 3, ... (default: 1) principal_component_on_y_axis principle component plot y-axis PCA plot. Choices include 1, 2, 3, ... (default: 2) legend_position_for_pca legend position PCA plot point_size_for_pca geom point size PCA plot add_label_to_pca label points PCA plot label_font_size label font size PCA plot label_offset_y_ label offset y PCA plot label_offset_x_ label offset x PCA plot samples_to_rename Plot Labels Column sample metadata table, can use parameter rename samples manually display PCA plot. Use \"Add item\" add additional sample renaming. Use following format describe old name (sample metadata table) want rename new name: old_name: new_name color_histogram_by_group Set FALSE label histogram Sample Names, set TRUE label histogram column select \"Group Column Used Color Histogram\" parameter (). Default FALSE. set_min_max_for_x_axis_for_histogram whether set min/max value histogram x-axis minimum_for_x_axis_for_histogram x-axis minimum histogram plot maximum_for_x_axis_for_histogram x-axis maximum histogram plot legend_position_for_histogram legend position histogram plot. consider setting 'none' large number samples. legend_font_size_for_histogram legend font size histogram plot number_of_histogram_legend_columns number columns histogram legend colors_for_plots Colors PCA histogram picked, order, list. >12 samples groups, program choose wide range random colors number_of_image_rows number rows plot image. 1 = side--side, 2 = stacked make_plots_interactive set TRUE make PCA Histogram plots interactive plotly, allowing hover mouse point line view sample information. similarity heat map display toggle set TRUE. Default FALSE. plot_correlation_matrix_heatmap Data sets large number samples may large create correlation matrix heat map. template takes longer 5 minutes run, Toggle switch FALSE correlation matrix created. Default TRUE. make_plots whether create plots","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/filter_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter low counts — filter_counts","text":"multiOmicDataSet filtered counts","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/filter_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter low counts — filter_counts","text":"function takes multiOmicDataSet containing raw counts sample metadata table, returns multiOmicDataSet object filtered counts. also produces image consisting three QC plots. can tune threshold tuning low counts given gene deemed \"low\" filtered downstream analysis. default, parameter set 1, meaning raw count value less 1 count \"low\". QC plots provided help assess: (1) PCA Plot: within group variance expression dimensionality reduction; (2) Count Density Histogram: dis/similarity count distributions samples; (3) Similarity Heatmap: overall similarity samples one another based unsupervised clustering.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/filter_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter low counts — filter_counts","text":"","code":"moo <- create_multiOmicDataSet_from_dataframes(   as.data.frame(nidap_sample_metadata),   as.data.frame(nidap_clean_raw_counts),   sample_id_colname = \"Sample\" ) %>%   calc_cpm(gene_colname = \"Gene\") %>%   filter_counts(     sample_names_column = \"Sample\",     gene_names_column = \"Gene\",     count_type = \"raw\"   ) head(moo@counts$filt) #>            Gene   A1  A2   A3   B1   B2  B3   C1  C2   C3 #> 1 0610007P14Rik 1049 950  934 1068 1140 947 1393 907 1427 #> 2 0610009B22Rik  283 590  615  241  383 608  299 186  696 #> 3 0610010F05Rik  352 678 1377  958  879 616  332   0  186 #> 4 0610011F06Rik  430 565  553  462  558 688  710 826  706 #> 5 0610012G03Rik  480 589  683  324  596 673  909 933  419 #> 6 0610037L13Rik  467 570  593  558  330 423  356 198  568"},{"path":"https://ccbr.github.io/MOSuite/reference/gene_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"RSEM expected gene counts — gene_counts","title":"RSEM expected gene counts — gene_counts","text":"RSEM expected gene counts","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/gene_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RSEM expected gene counts — gene_counts","text":"","code":"gene_counts"},{"path":[]},{"path":"https://ccbr.github.io/MOSuite/reference/gene_counts.html","id":"gene-counts","dir":"Reference","previous_headings":"","what":"gene_counts","title":"RSEM expected gene counts — gene_counts","text":"data frame columns 'gene_id', 'GeneName', column sample's expected count.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/gene_counts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"RSEM expected gene counts — gene_counts","text":"Generated running RENEE v2.5.8 test dataset","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/get_random_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get random colors. — get_random_colors","title":"Get random colors. — get_random_colors","text":"Note: function guaranteed create color blind friendly palette. Consider using palettes RColorBrewer::display.brewer.(colorblindFriendly = TRUE).","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/get_random_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get random colors. — get_random_colors","text":"","code":"get_random_colors(num_colors, n = 2000)"},{"path":"https://ccbr.github.io/MOSuite/reference/get_random_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get random colors. — get_random_colors","text":"num_colors number colors select. n number random RGB values generate color space.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/get_random_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get random colors. — get_random_colors","text":"vector random colors hex format.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/get_random_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get random colors. — get_random_colors","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(10) get_random_colors(5) } # }"},{"path":"https://ccbr.github.io/MOSuite/reference/meta_tbl_to_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","title":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","text":"Convert sample metadata tibble dataframe sample IDs row names","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/meta_tbl_to_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","text":"","code":"meta_tbl_to_dat(meta_tbl, sample_id_colname = sample_id)"},{"path":"https://ccbr.github.io/MOSuite/reference/meta_tbl_to_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","text":"meta_tbl tibble sample_id column sample_id_colname name column sample_meta_filepath contains sample IDs","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/meta_tbl_to_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","text":"dataframe row names sample IDs","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/meta_tbl_to_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","text":"","code":"sample_meta_tbl <- readr::read_tsv(system.file(\"extdata\",   \"sample_metadata.tsv.gz\",   package = \"MOSuite\" )) #> Rows: 4 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): sample_id, condition #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(sample_meta_tbl) #> # A tibble: 4 × 2 #>   sample_id condition #>   <chr>     <chr>     #> 1 KO_S3     knockout  #> 2 KO_S4     knockout  #> 3 WT_S1     wildtype  #> 4 WT_S2     wildtype  meta_tbl_to_dat(sample_meta_tbl) #>       sample_id #> KO_S3     KO_S3 #> KO_S4     KO_S4 #> WT_S1     WT_S1 #> WT_S2     WT_S2"},{"path":"https://ccbr.github.io/MOSuite/reference/multiOmicDataSet.html","id":null,"dir":"Reference","previous_headings":"","what":"multiOmicDataSet class — multiOmicDataSet","title":"multiOmicDataSet class — multiOmicDataSet","text":"multiOmicDataSet class","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/multiOmicDataSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multiOmicDataSet class — multiOmicDataSet","text":"","code":"multiOmicDataSet(sample_meta_dat, counts_lst, analyses_lst = list())"},{"path":"https://ccbr.github.io/MOSuite/reference/multiOmicDataSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multiOmicDataSet class — multiOmicDataSet","text":"sample_meta_dat sample metadata data frame tibble. Must contain sample_id column. counts_lst named list dataframes containing counts, e.g. expected gene counts RSEM. data frame expected contain gene_id column column sample ID metadata. analyses_lst named list analysis results, e.g. DESeq results object","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_clean_raw_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean raw counts for the NIDAP test dataset. The result of running clean_raw_counts() on nidap_raw_counts. — nidap_clean_raw_counts","title":"Clean raw counts for the NIDAP test dataset. The result of running clean_raw_counts() on nidap_raw_counts. — nidap_clean_raw_counts","text":"Clean raw counts NIDAP test dataset. result running clean_raw_counts() nidap_raw_counts.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_clean_raw_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean raw counts for the NIDAP test dataset. The result of running clean_raw_counts() on nidap_raw_counts. — nidap_clean_raw_counts","text":"","code":"nidap_clean_raw_counts"},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_clean_raw_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clean raw counts for the NIDAP test dataset. The result of running clean_raw_counts() on nidap_raw_counts. — nidap_clean_raw_counts","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 43280 rows 10 columns.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_filtered_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtered counts for the NIDAP test dataset. The result of running filter_counts() on nidap_clean_raw_counts. — nidap_filtered_counts","title":"Filtered counts for the NIDAP test dataset. The result of running filter_counts() on nidap_clean_raw_counts. — nidap_filtered_counts","text":"Filtered counts NIDAP test dataset. result running filter_counts() nidap_clean_raw_counts.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_filtered_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtered counts for the NIDAP test dataset. The result of running filter_counts() on nidap_clean_raw_counts. — nidap_filtered_counts","text":"","code":"nidap_filtered_counts"},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_filtered_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Filtered counts for the NIDAP test dataset. The result of running filter_counts() on nidap_clean_raw_counts. — nidap_filtered_counts","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 7943 rows 10 columns.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_norm_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized counts for the NIDAP test dataset. The result of running normalize_counts() on nidap_filtered_counts. — nidap_norm_counts","title":"Normalized counts for the NIDAP test dataset. The result of running normalize_counts() on nidap_filtered_counts. — nidap_norm_counts","text":"Normalized counts NIDAP test dataset. result running normalize_counts() nidap_filtered_counts.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_norm_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized counts for the NIDAP test dataset. The result of running normalize_counts() on nidap_filtered_counts. — nidap_norm_counts","text":"","code":"nidap_norm_counts"},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_norm_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Normalized counts for the NIDAP test dataset. The result of running normalize_counts() on nidap_filtered_counts. — nidap_norm_counts","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 7943 rows 10 columns.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_raw_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw counts for the NIDAP test dataset Pairs with nidap_sample_metadata. — nidap_raw_counts","title":"Raw counts for the NIDAP test dataset Pairs with nidap_sample_metadata. — nidap_raw_counts","text":"Raw counts NIDAP test dataset Pairs nidap_sample_metadata.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_raw_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw counts for the NIDAP test dataset Pairs with nidap_sample_metadata. — nidap_raw_counts","text":"","code":"nidap_raw_counts"},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_raw_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Raw counts for the NIDAP test dataset Pairs with nidap_sample_metadata. — nidap_raw_counts","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 43280 rows 10 columns.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_sample_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample metadata for the NIDAP test dataset — nidap_sample_metadata","title":"Sample metadata for the NIDAP test dataset — nidap_sample_metadata","text":"Sample metadata NIDAP test dataset","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_sample_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample metadata for the NIDAP test dataset — nidap_sample_metadata","text":"","code":"nidap_sample_metadata"},{"path":"https://ccbr.github.io/MOSuite/reference/nidap_sample_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample metadata for the NIDAP test dataset — nidap_sample_metadata","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 9 rows 5 columns.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/normalize_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize counts — normalize_counts","title":"Normalize counts — normalize_counts","text":"Normalize counts","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/normalize_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize counts — normalize_counts","text":"","code":"normalize_counts(   moo,   count_type = \"filt\",   gene_names_column = \"Gene\",   columns_to_include = c(\"Gene\", \"A1\", \"A2\", \"A3\", \"B1\", \"B2\", \"B3\", \"C1\", \"C2\", \"C3\"),   sample_names_column = \"Sample\",   group_column = \"Group\",   label_column = \"Label\",   input_in_log_counts = FALSE,   voom_normalization_method = \"quantile\",   samples_to_rename = c(\"\"),   add_label_to_pca = TRUE,   principal_component_on_x_axis = 1,   principal_component_on_y_axis = 2,   legend_position_for_pca = \"top\",   label_offset_x_ = 2,   label_offset_y_ = 2,   label_font_size = 3,   point_size_for_pca = 8,   color_histogram_by_group = TRUE,   set_min_max_for_x_axis_for_histogram = FALSE,   minimum_for_x_axis_for_histogram = -1,   maximum_for_x_axis_for_histogram = 1,   legend_font_size_for_histogram = 10,   legend_position_for_histogram = \"top\",   number_of_histogram_legend_columns = 6,   number_of_image_rows = 2,   colors_for_plots = c(),   make_plots_interactive = FALSE,   plot_correlation_matrix_heatmap = TRUE )"},{"path":"https://ccbr.github.io/MOSuite/reference/normalize_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize counts — normalize_counts","text":"moo multiOmicDataSet object (see create_multiOmicDataSet_from_dataframes()) count_type type counts use – must name counts slot (moo@counts) gene_names_column column input Counts Matrix containing Feature IDs (Usually Gene Protein ID). usually first column input Counts Matrix. columns Text type input Counts Matrix available select parameter. columns_to_include Columns like include? Usually, choose feature ID column (e.g. gene protein ID) sample columns. Columns excluded removed step analysis downstream step. sample_names_column column input Sample Metadata table containing sample names. names column must exactly match names used sample column names input Counts Matrix. columns Text type input Sample Metadata table available select parameter. group_column column input Sample Metadata table containing sample group information. usually column showing experimental treatments sample belongs (e.g. WildType, Knockout, Tumor, Normal, , , etc.). columns Text type input Sample Metadata available select parameter. label_column column input Sample Metadata table containing sample labels wish appear plots produced template. can Sample Names Column. However, may desire different labels display figure (e.g. shorter labels sometimes preferred plots). case, select column preferred Labels . selected column contain unique names sample. input_in_log_counts set TRUE counts already log2-transformed voom_normalization_method Normalization method applied logCPM values using limma::voom samples_to_rename Plot Labels Column sample metadata table, can use parameter rename samples manually display PCA plot. Use \"Add item\" add additional sample renaming. Use following format describe old name (sample metadata table) want rename new name: old_name: new_name add_label_to_pca label points PCA plot principal_component_on_x_axis principle component plot x-axis PCA plot. Choices include 1, 2, 3, ... (default: 1) principal_component_on_y_axis principle component plot y-axis PCA plot. Choices include 1, 2, 3, ... (default: 2) legend_position_for_pca legend position PCA plot label_offset_x_ label offset x PCA plot label_offset_y_ label offset y PCA plot label_font_size label font size PCA plot point_size_for_pca geom point size PCA plot color_histogram_by_group Set FALSE label histogram Sample Names, set TRUE label histogram column select \"Group Column Used Color Histogram\" parameter (). Default FALSE. set_min_max_for_x_axis_for_histogram whether set min/max value histogram x-axis minimum_for_x_axis_for_histogram x-axis minimum histogram plot maximum_for_x_axis_for_histogram x-axis maximum histogram plot legend_font_size_for_histogram legend font size histogram plot legend_position_for_histogram legend position histogram plot. consider setting 'none' large number samples. number_of_histogram_legend_columns number columns histogram legend number_of_image_rows number rows plot image. 1 = side--side, 2 = stacked colors_for_plots Colors PCA histogram picked, order, list. >12 samples groups, program choose wide range random colors make_plots_interactive set TRUE make PCA Histogram plots interactive plotly, allowing hover mouse point line view sample information. similarity heat map display toggle set TRUE. Default FALSE. plot_correlation_matrix_heatmap Data sets large number samples may large create correlation matrix heat map. template takes longer 5 minutes run, Toggle switch FALSE correlation matrix created. Default TRUE.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/normalize_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize counts — normalize_counts","text":"multiOmicDataSet normalized counts","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/normalize_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize counts — normalize_counts","text":"","code":"moo <- multiOmicDataSet(   sample_meta_dat = as.data.frame(nidap_sample_metadata),   counts_lst = list(     \"raw\" = as.data.frame(nidap_raw_counts),     \"clean\" = as.data.frame(nidap_clean_raw_counts),     \"filt\" = as.data.frame(nidap_filtered_counts)   ) ) %>%   normalize_counts(     gene_names_column = \"Gene\",     columns_to_include = c(\"Gene\", \"A1\", \"A2\", \"A3\", \"B1\", \"B2\", \"B3\", \"C1\", \"C2\", \"C3\"),     sample_names_column = \"Sample\",     group_column = \"Group\",     label_column = \"Label\"   ) #> Total number of features included: 7943 #> Sample columns #> A1A2A3B1B2B3C1C2C3 #> Feature Columns #> Gene head(moo@counts[[\"norm\"]][[\"voom\"]]) #>            Gene       A1       A2       A3       B1       B2       B3       C1 #> 1 0610007P14Rik 6.532994 6.192871 5.954869 6.375896 6.275880 6.119449 6.419913 #> 2 0610009B22Rik 4.484983 5.448875 5.286875 3.445612 4.451347 5.473886 3.500359 #> 3 0610010F05Rik 4.883688 5.668494 6.537590 6.216408 5.893089 5.498884 3.845207 #> 4 0610011F06Rik 5.199684 5.374085 5.112952 5.155558 5.163359 5.650929 5.441965 #> 5 0610012G03Rik 5.368118 5.445918 5.456511 4.567138 5.274928 5.625039 5.787457 #> 6 0610037L13Rik 5.327987 5.388747 5.233520 5.450169 3.656585 4.929386 4.274944 #>         C2       C3 #> 1 6.172204 6.497050 #> 2 4.709254 5.471951 #> 3 2.685177 2.805426 #> 4 6.043492 5.490958 #> 5 6.214163 4.682896 #> 6 4.744405 5.173531"},{"path":"https://ccbr.github.io/MOSuite/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap — plot_heatmap","title":"Make a heatmap — plot_heatmap","text":"Make heatmap","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap — plot_heatmap","text":"","code":"plot_heatmap(   counts_matrix,   sample_metadata,   sample_names_column,   label_column,   anno_column,   anno_colors )"},{"path":"https://ccbr.github.io/MOSuite/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap — plot_heatmap","text":"sample_names_column column input Sample Metadata table containing sample names. names column must exactly match names used sample column names input Counts Matrix. columns Text type input Sample Metadata table available select parameter. label_column column input Sample Metadata table containing sample labels wish appear plots produced template. can Sample Names Column. However, may desire different labels display figure (e.g. shorter labels sometimes preferred plots). case, select column preferred Labels . selected column contain unique names sample. anno_column annotation (group) column anno_colors vector colors annotation column","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap — plot_heatmap","text":"heatmap ggproto object","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot histogram — plot_histogram","title":"Plot histogram — plot_histogram","text":"Plot histogram","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot histogram — plot_histogram","text":"","code":"plot_histogram(   log_counts,   sample_metadata,   gene_names_column,   group_column,   label_column,   color_values,   color_histogram_by_group = FALSE,   set_min_max_for_x_axis_for_histogram = FALSE,   minimum_for_x_axis_for_histogram = -1,   maximum_for_x_axis_for_histogram = 1,   legend_position_for_histogram = \"top\",   legend_font_size_for_histogram = 10,   number_of_histogram_legend_columns = 6,   x_axis_label = \"Counts\",   y_axis_label = \"Density\",   make_plots_interactive = FALSE )"},{"path":"https://ccbr.github.io/MOSuite/reference/plot_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot histogram — plot_histogram","text":"log_counts log-transformed filtered counts sample_metadata sample metadata data frame tibble. gene_names_column column input Counts Matrix containing Feature IDs (Usually Gene Protein ID). usually first column input Counts Matrix. columns Text type input Counts Matrix available select parameter. group_column column input Sample Metadata table containing sample group information. usually column showing experimental treatments sample belongs (e.g. WildType, Knockout, Tumor, Normal, , , etc.). columns Text type input Sample Metadata available select parameter. label_column column input Sample Metadata table containing sample labels wish appear plots produced template. can Sample Names Column. However, may desire different labels display figure (e.g. shorter labels sometimes preferred plots). case, select column preferred Labels . selected column contain unique names sample. color_values vector colors hex values names recognized R color_histogram_by_group Set FALSE label histogram Sample Names, set TRUE label histogram column select \"Group Column Used Color Histogram\" parameter (). Default FALSE. set_min_max_for_x_axis_for_histogram whether set min/max value histogram x-axis minimum_for_x_axis_for_histogram x-axis minimum histogram plot maximum_for_x_axis_for_histogram x-axis maximum histogram plot legend_position_for_histogram legend position histogram plot. consider setting 'none' large number samples. legend_font_size_for_histogram legend font size histogram plot number_of_histogram_legend_columns number columns histogram legend x_axis_label text label x axis y_axis_label text label y axis make_plots_interactive set TRUE make PCA Histogram plots interactive plotly, allowing hover mouse point line view sample information. similarity heat map display toggle set TRUE. Default FALSE.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot histogram — plot_histogram","text":"ggplot object","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform and plot a Principal Components Analysis — plot_pca","title":"Perform and plot a Principal Components Analysis — plot_pca","text":"Perform plot Principal Components Analysis","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform and plot a Principal Components Analysis — plot_pca","text":"","code":"plot_pca(   log_counts,   sample_metadata,   samples_to_include,   samples_to_rename,   group_column,   label_column,   color_values,   principal_component_on_x_axis = 1,   principal_component_on_y_axis = 2,   legend_position_for_pca = \"top\",   point_size_for_pca = 1,   add_label_to_pca = TRUE,   label_font_size = 3,   label_offset_y_ = 2,   label_offset_x_ = 2,   make_plots_interactive = FALSE )"},{"path":"https://ccbr.github.io/MOSuite/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform and plot a Principal Components Analysis — plot_pca","text":"log_counts log-transformed filtered counts sample_metadata sample metadata data frame tibble. samples_to_include samples sample_metadata include analysis samples_to_rename Plot Labels Column sample metadata table, can use parameter rename samples manually display PCA plot. Use \"Add item\" add additional sample renaming. Use following format describe old name (sample metadata table) want rename new name: old_name: new_name group_column column input Sample Metadata table containing sample group information. usually column showing experimental treatments sample belongs (e.g. WildType, Knockout, Tumor, Normal, , , etc.). columns Text type input Sample Metadata available select parameter. label_column column input Sample Metadata table containing sample labels wish appear plots produced template. can Sample Names Column. However, may desire different labels display figure (e.g. shorter labels sometimes preferred plots). case, select column preferred Labels . selected column contain unique names sample. color_values vector colors hex values names recognized R principal_component_on_x_axis principle component plot x-axis PCA plot. Choices include 1, 2, 3, ... (default: 1) principal_component_on_y_axis principle component plot y-axis PCA plot. Choices include 1, 2, 3, ... (default: 2) legend_position_for_pca legend position PCA plot point_size_for_pca geom point size PCA plot add_label_to_pca label points PCA plot label_font_size label font size PCA plot label_offset_y_ label offset y PCA plot label_offset_x_ label offset x PCA plot make_plots_interactive set TRUE make PCA Histogram plots interactive plotly, allowing hover mouse point line view sample information. similarity heat map display toggle set TRUE. Default FALSE.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform and plot a Principal Components Analysis — plot_pca","text":"ggplot object","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_read_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Create read depth plot — plot_read_depth","title":"Create read depth plot — plot_read_depth","text":"Create read depth plot","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_read_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create read depth plot — plot_read_depth","text":"","code":"plot_read_depth(raw_counts_matrix)"},{"path":"https://ccbr.github.io/MOSuite/reference/plot_read_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create read depth plot — plot_read_depth","text":"raw_counts_matrix dataframe raw counts data","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/plot_read_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create read depth plot — plot_read_depth","text":"ggplot object","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"dplyr pipe — reexports","title":"dplyr pipe — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/remove_low_count_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove low-count genes — remove_low_count_genes","title":"Remove low-count genes — remove_low_count_genes","text":"TODO function also transforms raw counts CPM, separate function step, filter_counts function() TODO document isexpr1 column output","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/remove_low_count_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove low-count genes — remove_low_count_genes","text":"","code":"remove_low_count_genes(   counts_matrix,   sample_metadata,   gene_names_column,   group_column,   use_cpm_counts_to_filter = TRUE,   use_group_based_filtering = FALSE,   minimum_count_value_to_be_considered_nonzero = 8,   minimum_number_of_samples_with_nonzero_counts_in_total = 7,   minimum_number_of_samples_with_nonzero_counts_in_a_group = 3 )"},{"path":"https://ccbr.github.io/MOSuite/reference/remove_low_count_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove low-count genes — remove_low_count_genes","text":"gene_names_column column input Counts Matrix containing Feature IDs (Usually Gene Protein ID). usually first column input Counts Matrix. columns Text type input Counts Matrix available select parameter. group_column column input Sample Metadata table containing sample group information. usually column showing experimental treatments sample belongs (e.g. WildType, Knockout, Tumor, Normal, , , etc.). columns Text type input Sample Metadata available select parameter. use_cpm_counts_to_filter transformation performed counts matrix (eg Raw Counts) set TRUE. TRUE counts transformed CPM filtered based given criteria. gene counts matrix transformed (eg log2, CPM, FPKM form Normalization) set FALSE. FALSE transformation applied features filtered . RNAseq data RAW counts transformed CPM order properly filter. use_group_based_filtering TRUE, keeps features (e.g. genes) least certain number samples nonzero CPM counts least one group minimum_count_value_to_be_considered_nonzero Minimum count value considered non-zero sample minimum_number_of_samples_with_nonzero_counts_in_total Minimum number samples (total) non-zero counts minimum_number_of_samples_with_nonzero_counts_in_a_group keeps genes least number samples nonzero CPM counts least one group","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/remove_low_count_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove low-count genes — remove_low_count_genes","text":"counts matrix low-count genes removed","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/rename_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename samples — rename_samples","title":"Rename samples — rename_samples","text":"TODO happen right beginning template?","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/rename_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename samples — rename_samples","text":"","code":"rename_samples(dat, samples_to_rename_manually)"},{"path":"https://ccbr.github.io/MOSuite/reference/rename_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename samples — rename_samples","text":"dat data frame samples_to_rename_manually TODO use sample metadata spreadsheet custom column. Need document format object.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/rename_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename samples — rename_samples","text":"data frame samples renamed","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/rename_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename samples — rename_samples","text":"TODO accept new names samples sample metadata spreadsheet","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/run_deseq2.html","id":null,"dir":"Reference","previous_headings":"","what":"Run DESeq2 on a multiOmicDataSet — run_deseq2","title":"Run DESeq2 on a multiOmicDataSet — run_deseq2","text":"Run DESeq2 multiOmicDataSet","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/run_deseq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run DESeq2 on a multiOmicDataSet — run_deseq2","text":"","code":"run_deseq2(moo, design, ...)"},{"path":"https://ccbr.github.io/MOSuite/reference/run_deseq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run DESeq2 on a multiOmicDataSet — run_deseq2","text":"moo multiOmicDataSet object design model formula experimental design. Columns must exist meta_dat. ... remaining variables forwarded DESeq2::DESeq().","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/run_deseq2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run DESeq2 on a multiOmicDataSet — run_deseq2","text":"multiOmicDataSet object DESeq2 slot filled","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/run_deseq2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run DESeq2 on a multiOmicDataSet — run_deseq2","text":"","code":"if (FALSE) { # \\dontrun{ moo <- create_multiOmicDataSet_from_files(   system.file(\"extdata\", \"sample_metadata.tsv.gz\",     package = \"MOSuite\"   ),   system.file(\"extdata\",     \"RSEM.genes.expected_count.all_samples.txt.gz\",     package = \"MOSuite\"   ) ) %>% filter_counts() moo <- run_deseq2(moo, ~condition) } # }"},{"path":"https://ccbr.github.io/MOSuite/reference/separate_gene_meta_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate gene metadata column — separate_gene_meta_columns","title":"Separate gene metadata column — separate_gene_meta_columns","text":"Separate gene metadata column","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/separate_gene_meta_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate gene metadata column — separate_gene_meta_columns","text":"","code":"separate_gene_meta_columns(   raw_counts_matrix,   gene_names_column = \"GeneName\",   split_gene_name = TRUE,   data_type = \"Bulk RNAseq\" )"},{"path":"https://ccbr.github.io/MOSuite/reference/separate_gene_meta_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate gene metadata column — separate_gene_meta_columns","text":"raw_counts_matrix dataframe raw counts data gene_names_column column input Counts Matrix containing Feature IDs (Usually Gene Protein ID). usually first column input Counts Matrix. columns Text type input Counts Matrix available select parameter. split_gene_name TRUE, split gene name column special characters: ,|_-: data_type Type data process. Options: c(\"Bulk RNAseq\", \"Proteomics\")","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/separate_gene_meta_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate gene metadata column — separate_gene_meta_columns","text":"dataframe metadata separated","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/strip_ensembl_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove version number from ENSEMBLE IDs — strip_ensembl_version","title":"Remove version number from ENSEMBLE IDs — strip_ensembl_version","text":"Remove version number ENSEMBLE IDs","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/strip_ensembl_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove version number from ENSEMBLE IDs — strip_ensembl_version","text":"","code":"strip_ensembl_version(x)"},{"path":"https://ccbr.github.io/MOSuite/reference/strip_ensembl_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove version number from ENSEMBLE IDs — strip_ensembl_version","text":"x vector IDs","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/strip_ensembl_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove version number from ENSEMBLE IDs — strip_ensembl_version","text":"IDs without version numbers","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/validate_sample_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate raw counts sample metadata for filtering — validate_sample_metadata","title":"Validate raw counts sample metadata for filtering — validate_sample_metadata","text":"Validate raw counts sample metadata filtering","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/validate_sample_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate raw counts sample metadata for filtering — validate_sample_metadata","text":"","code":"validate_sample_metadata(   counts_matrix,   sample_metadata,   sample_names_column = \"Sample\",   group_column = \"Group\" )"},{"path":"https://ccbr.github.io/MOSuite/reference/validate_sample_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate raw counts sample metadata for filtering — validate_sample_metadata","text":"sample_names_column column input Sample Metadata table containing sample names. names column must exactly match names used sample column names input Counts Matrix. columns Text type input Sample Metadata table available select parameter. group_column column input Sample Metadata table containing sample group information. usually column showing experimental treatments sample belongs (e.g. WildType, Knockout, Tumor, Normal, , , etc.). columns Text type input Sample Metadata available select parameter.","code":""},{"path":"https://ccbr.github.io/MOSuite/reference/validate_sample_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate raw counts sample metadata for filtering — validate_sample_metadata","text":"sample metadata empty cells removed special characters replaced","code":""},{"path":"https://ccbr.github.io/MOSuite/news/index.html","id":"mosuite-development-version-0009000","dir":"Changelog","previous_headings":"","what":"MOSuite development version 0.0.0.9000","title":"MOSuite development version 0.0.0.9000","text":"first release MOSuite 🎉 Note: start development, package called reneeTools. Later renamed MOSuite. (#76)","code":""},{"path":"https://ccbr.github.io/MOSuite/news/index.html","id":"main-functions--classes-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Main functions & classes","title":"MOSuite development version 0.0.0.9000","text":"create_multiOmicDataSet_from_files() create_multiOmicDataSet_from_dataframes() run_deseq2() calc_cpm() (#38) filter_counts() (#38) clean_raw_counts() (#79) normalize_counts() (#82)","code":""}]
