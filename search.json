[{"path":"https://ccbr.github.io/reneeTools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 CCR Collaborative Bioinformatics Resource Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":[]},{"path":"https://ccbr.github.io/reneeTools/PULL_REQUEST_TEMPLATE.html","id":"pr-checklist","dir":"","previous_headings":"","what":"PR Checklist","title":"NA","text":"(Strikethrough points applicable.) comment contains description changes justifications, relevant issues linked. Write unit tests new features, bug fixes, code changes. Update docs API changes (roxygen comments, vignettes, readme, etc.). Update NEWS.md short description user-facing changes reference PR number. Guidelines: https://keepachangelog.com/en/1.1.0/ Run devtools::check() locally fix notes, warnings, errors.","code":""},{"path":"https://ccbr.github.io/reneeTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vishal Koparde. Author, maintainer. Kelly Sovacool. Author. CCR Collaborative Bioinformatics Resource. Copyright holder.","code":""},{"path":"https://ccbr.github.io/reneeTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Koparde V, Sovacool K (2024). reneeTools: Helper functions RENEE. R package version 0.0.0.9000,  https://ccbr.github.io/reneeTools/, https://github.com/CCBR/reneeTools.","code":"@Manual{,   title = {reneeTools: Helper functions for RENEE},   author = {Vishal Koparde and Kelly Sovacool},   year = {2024},   note = {R package version 0.0.0.9000,  https://ccbr.github.io/reneeTools/},   url = {https://github.com/CCBR/reneeTools}, }"},{"path":"https://ccbr.github.io/reneeTools/index.html","id":"reneetools","dir":"","previous_headings":"","what":"Helper functions for RENEE","title":"Helper functions for RENEE","text":"Helper functions RENEE: RNA sequencing analysis pipeline","code":""},{"path":"https://ccbr.github.io/reneeTools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helper functions for RENEE","text":"can install development version reneeTools GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"CCBR/reneeTools\")"},{"path":"https://ccbr.github.io/reneeTools/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Helper functions for RENEE","text":"TODO: basic example shows solve common problem:","code":"library(reneeTools) ## basic example code"},{"path":"https://ccbr.github.io/reneeTools/reference/counts_dat_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","title":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","text":"Convert data frame gene counts matrix","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/counts_dat_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","text":"","code":"counts_dat_to_matrix(counts_tbl)"},{"path":"https://ccbr.github.io/reneeTools/reference/counts_dat_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","text":"counts_tbl expected gene counts RSEM data frame tibble.","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/counts_dat_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","text":"matrix gene counts rows gene IDs","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/counts_dat_to_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data frame of gene counts to a matrix — counts_dat_to_matrix","text":"","code":"counts_dat_to_matrix(head(gene_counts)) #>                    KO_S3 KO_S4 WT_S1 WT_S2 #> ENSG00000121410.11     0     0     0     0 #> ENSG00000268895.5      0     0     0     0 #> ENSG00000148584.15     0     0     0     0 #> ENSG00000175899.14     0     0     0     0 #> ENSG00000245105.3      0     0     0     0 #> ENSG00000166535.20     0     0     0     0"},{"path":"https://ccbr.github.io/reneeTools/reference/filter_low_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"filter_low_counts — filter_low_counts","title":"filter_low_counts — filter_low_counts","text":"filter_low_counts","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/filter_low_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter_low_counts — filter_low_counts","text":"","code":"filter_low_counts(counts_dat, min_counts = 0)"},{"path":"https://ccbr.github.io/reneeTools/reference/filter_low_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter_low_counts — filter_low_counts","text":"counts_dat expected gene counts RSEM data frame tibble min_counts integer number minimum counts across samples (default: 0)","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/filter_low_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter_low_counts — filter_low_counts","text":"filtered counts dataframe","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/filter_low_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"filter_low_counts — filter_low_counts","text":"","code":"filter_low_counts(gene_counts) %>% head() #> # A tibble: 6 × 6 #>   gene_id            GeneName KO_S3 KO_S4 WT_S1 WT_S2 #>   <chr>              <chr>    <dbl> <dbl> <dbl> <dbl> #> 1 ENSG00000121410.11 A1BG         0     0     0     0 #> 2 ENSG00000268895.5  A1BG-AS1     0     0     0     0 #> 3 ENSG00000148584.15 A1CF         0     0     0     0 #> 4 ENSG00000175899.14 A2M          0     0     0     0 #> 5 ENSG00000245105.3  A2M-AS1      0     0     0     0 #> 6 ENSG00000166535.20 A2ML1        0     0     0     0 filter_low_counts(gene_counts, min_counts = 100) #> # A tibble: 9 × 6 #>   gene_id            GeneName KO_S3 KO_S4 WT_S1 WT_S2 #>   <chr>              <chr>    <dbl> <dbl> <dbl> <dbl> #> 1 ENSG00000154734.15 ADAMTS1      0   0      46    80 #> 2 ENSG00000142192.21 APP          2   1      78    88 #> 3 ENSG00000185658.13 BRWD1       25  22.1    74   104 #> 4 ENSG00000142156.14 COL6A1       3   6      71   112 #> 5 ENSG00000142173.15 COL6A2       3   0      77    98 #> 6 ENSG00000157540.21 DYRK1A      12   8      31    49 #> 7 ENSG00000159140.20 SON          3   1      74    97 #> 8 ENSG00000160181.9  TFF2         0   0      71    89 #> 9 ENSG00000182670.13 TTC3        12  11      76    85"},{"path":"https://ccbr.github.io/reneeTools/reference/gene_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"RSEM expected gene counts — gene_counts","title":"RSEM expected gene counts — gene_counts","text":"RSEM expected gene counts","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/gene_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RSEM expected gene counts — gene_counts","text":"","code":"gene_counts"},{"path":[]},{"path":"https://ccbr.github.io/reneeTools/reference/gene_counts.html","id":"gene-counts","dir":"Reference","previous_headings":"","what":"gene_counts","title":"RSEM expected gene counts — gene_counts","text":"data frame columns 'gene_id', 'GeneName', column sample's expected count.","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/gene_counts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"RSEM expected gene counts — gene_counts","text":"Generated running RENEE v2.5.8 test dataset","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/meta_tbl_to_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","title":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","text":"Convert sample metadata tibble dataframe sample IDs row names","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/meta_tbl_to_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","text":"","code":"meta_tbl_to_dat(meta_tbl)"},{"path":"https://ccbr.github.io/reneeTools/reference/meta_tbl_to_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","text":"meta_tbl tibble sample_id column","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/meta_tbl_to_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","text":"dataframe row names sample IDs","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/meta_tbl_to_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert sample metadata from a tibble to a dataframe with sample IDs as row names — meta_tbl_to_dat","text":"","code":"sample_meta_tbl <- readr::read_tsv(system.file(\"extdata\",   \"sample_metadata.tsv\",   package = \"reneeTools\" )) #> Rows: 4 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): sample_id, condition #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(sample_meta_tbl) #> # A tibble: 4 × 2 #>   sample_id condition #>   <chr>     <chr>     #> 1 KO_S3     knockout  #> 2 KO_S4     knockout  #> 3 WT_S1     wildtype  #> 4 WT_S2     wildtype  meta_tbl_to_dat(sample_meta_tbl) #>       condition #> KO_S3  knockout #> KO_S4  knockout #> WT_S1  wildtype #> WT_S2  wildtype"},{"path":"https://ccbr.github.io/reneeTools/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"dplyr pipe — reexports","title":"dplyr pipe — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/reneeDataSetFromDataFrames.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a reneeDataSet object from data frames — reneeDataSetFromDataFrames","title":"Construct a reneeDataSet object from data frames — reneeDataSetFromDataFrames","text":"Construct reneeDataSet object data frames","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/reneeDataSetFromDataFrames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a reneeDataSet object from data frames — reneeDataSetFromDataFrames","text":"","code":"reneeDataSetFromDataFrames(gene_counts_dat, sample_meta_dat)"},{"path":"https://ccbr.github.io/reneeTools/reference/reneeDataSetFromDataFrames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a reneeDataSet object from data frames — reneeDataSetFromDataFrames","text":"gene_counts_dat expected gene counts RSEM data frame tibble. Must contain gene_id column column sample ID metadata. sample_meta_dat sample metadata data frame tibble. Must contain sample_ID column.","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/reneeDataSetFromDataFrames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a reneeDataSet object from data frames — reneeDataSetFromDataFrames","text":"reneeDataSet object","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/reneeDataSetFromDataFrames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a reneeDataSet object from data frames — reneeDataSetFromDataFrames","text":"","code":"sample_meta <- data.frame(   sample_id = c(\"KO_S3\", \"KO_S4\", \"WT_S1\", \"WT_S2\"),   condition = factor(     c(\"knockout\", \"knockout\", \"wildtype\", \"wildtype\"),     levels = c(\"wildtype\", \"knockout\")   ) ) reneeDataSetFromDataFrames(gene_counts, sample_meta) #> <renee> #>  @ counts     : int [1:58929, 1:4] 0 0 0 0 0 0 0 0 0 0 ... #>  .. - attr(*, \"dimnames\")=List of 2 #>  ..  ..$ : chr [1:58929] \"ENSG00000121410.11\" \"ENSG00000268895.5\" \"ENSG00000148584.15\" \"ENSG00000175899.14\" ... #>  ..  ..$ : chr [1:4] \"KO_S3\" \"KO_S4\" \"WT_S1\" \"WT_S2\" #>  @ sample_meta:'data.frame':\t4 obs. of  1 variable: #>  .. $ condition: Factor w/ 2 levels \"wildtype\",\"knockout\": 2 2 1 1 #>  @ analyses   : list()"},{"path":"https://ccbr.github.io/reneeTools/reference/reneeDataSetFromFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a reneeDataSet object from tsv files. — reneeDataSetFromFiles","title":"Construct a reneeDataSet object from tsv files. — reneeDataSetFromFiles","text":"Construct reneeDataSet object tsv files.","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/reneeDataSetFromFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a reneeDataSet object from tsv files. — reneeDataSetFromFiles","text":"","code":"reneeDataSetFromFiles(gene_counts_filepath, sample_meta_filepath)"},{"path":"https://ccbr.github.io/reneeTools/reference/reneeDataSetFromFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a reneeDataSet object from tsv files. — reneeDataSetFromFiles","text":"gene_counts_filepath path tsv file expected gene counts RSEM. sample_meta_filepath path tsv file sample IDs metadata differential analysis.","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/reneeDataSetFromFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a reneeDataSet object from tsv files. — reneeDataSetFromFiles","text":"reneeDataSet object","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/reneeDataSetFromFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a reneeDataSet object from tsv files. — reneeDataSetFromFiles","text":"","code":"reneeDataSetFromFiles(   system.file(\"extdata\", \"RSEM.genes.expected_count.all_samples.txt\", package = \"reneeTools\"),   system.file(\"extdata\", \"sample_metadata.tsv\", package = \"reneeTools\") ) #> Rows: 58929 Columns: 6 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): gene_id, GeneName #> dbl (4): KO_S3, KO_S4, WT_S1, WT_S2 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 4 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): sample_id, condition #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> <renee> #>  @ counts     : int [1:58929, 1:4] 0 0 0 0 0 0 0 0 0 0 ... #>  .. - attr(*, \"dimnames\")=List of 2 #>  ..  ..$ : chr [1:58929] \"ENSG00000121410.11\" \"ENSG00000268895.5\" \"ENSG00000148584.15\" \"ENSG00000175899.14\" ... #>  ..  ..$ : chr [1:4] \"KO_S3\" \"KO_S4\" \"WT_S1\" \"WT_S2\" #>  @ sample_meta:'data.frame':\t4 obs. of  1 variable: #>  .. $ condition: chr  \"knockout\" \"knockout\" \"wildtype\" \"wildtype\" #>  @ analyses   : list()"},{"path":"https://ccbr.github.io/reneeTools/reference/reneeTools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"reneeTools: R helper functions for RENEE — reneeTools-package","title":"reneeTools: R helper functions for RENEE — reneeTools-package","text":"reneeTools implements helper functions RENEE, comprehensive quality-control quantification RNA-seq pipeline","code":""},{"path":[]},{"path":"https://ccbr.github.io/reneeTools/reference/reneeTools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"reneeTools: R helper functions for RENEE — reneeTools-package","text":"Maintainer: Vishal Koparde vishal.koparde@nih.gov (ORCID) Authors: Kelly Sovacool kelly.sovacool@nih.gov (ORCID) contributors: CCR Collaborative Bioinformatics Resource [copyright holder]","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/run_deseq2.html","id":null,"dir":"Reference","previous_headings":"","what":"Run DESeq2 on a reneeDataSet — run_deseq2","title":"Run DESeq2 on a reneeDataSet — run_deseq2","text":"Run DESeq2 reneeDataSet","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/run_deseq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run DESeq2 on a reneeDataSet — run_deseq2","text":"","code":"run_deseq2(renee_ds, design, ...)"},{"path":"https://ccbr.github.io/reneeTools/reference/run_deseq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run DESeq2 on a reneeDataSet — run_deseq2","text":"renee_ds reneeDataSet object design model formula experimental design. Columns must exist meta_dat. ... remaining variables forwarded DESeq2::DESeq().","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/run_deseq2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run DESeq2 on a reneeDataSet — run_deseq2","text":"reneeDataSet object DESeq2 slot filled","code":""},{"path":"https://ccbr.github.io/reneeTools/reference/run_deseq2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run DESeq2 on a reneeDataSet — run_deseq2","text":"","code":"rds <- reneeDataSetFromFiles(   system.file(\"extdata\",     \"RSEM.genes.expected_count.all_samples.txt\",     package = \"reneeTools\"   ),   system.file(\"extdata\", \"sample_metadata.tsv\",     package = \"reneeTools\"   ) ) #> Rows: 58929 Columns: 6 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): gene_id, GeneName #> dbl (4): KO_S3, KO_S4, WT_S1, WT_S2 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 4 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): sample_id, condition #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. run_deseq2(rds, ~condition) #> Warning: some variables in design formula are characters, converting to factors #> estimating size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> -- note: fitType='parametric', but the dispersion trend was not well captured by the #>    function: y = a/x + b, and a local regression fit was automatically substituted. #>    specify fitType='local' or 'mean' to avoid this message next time. #> final dispersion estimates #> fitting model and testing #> <renee> #>  @ counts     : int [1:58929, 1:4] 0 0 0 0 0 0 0 0 0 0 ... #>  .. - attr(*, \"dimnames\")=List of 2 #>  ..  ..$ : chr [1:58929] \"ENSG00000121410.11\" \"ENSG00000268895.5\" \"ENSG00000148584.15\" \"ENSG00000175899.14\" ... #>  ..  ..$ : chr [1:4] \"KO_S3\" \"KO_S4\" \"WT_S1\" \"WT_S2\" #>  @ sample_meta:'data.frame':\t4 obs. of  1 variable: #>  .. $ condition: chr  \"knockout\" \"knockout\" \"wildtype\" \"wildtype\" #>  @ analyses   :List of 1 #>  .. $ deseq2_ds:Formal class 'DESeqDataSet' [package \"DESeq2\"] with 8 slots #>  ..  .. ..@ design            :Class 'formula'  language ~condition #>  ..  .. .. .. ..- attr(*, \".Environment\")=<environment: 0x55cb0bf83bb0>  #>  ..  .. ..@ dispersionFunction:function (means)   #>  ..  .. .. ..- attr(*, \"fitType\")= chr \"local\" #>  ..  .. .. ..- attr(*, \"varLogDispEsts\")= num 0.0119 #>  ..  .. .. ..- attr(*, \"dispPriorVar\")= num 0.25 #>  ..  .. ..@ rowRanges         :Formal class 'CompressedGRangesList' [package \"GenomicRanges\"] with 5 slots #>  ..  .. .. .. ..@ unlistData     :Formal class 'GRanges' [package \"GenomicRanges\"] with 7 slots #>  ..  .. .. .. .. .. ..@ seqnames       :Formal class 'Rle' [package \"S4Vectors\"] with 4 slots #>  ..  .. .. .. .. .. .. .. ..@ values         : Factor w/ 0 levels:  #>  ..  .. .. .. .. .. .. .. ..@ lengths        : int(0)  #>  ..  .. .. .. .. .. .. .. ..@ elementMetadata: NULL #>  ..  .. .. .. .. .. .. .. ..@ metadata       : list() #>  ..  .. .. .. .. .. ..@ ranges         :Formal class 'IRanges' [package \"IRanges\"] with 6 slots #>  ..  .. .. .. .. .. .. .. ..@ start          : int(0)  #>  ..  .. .. .. .. .. .. .. ..@ width          : int(0)  #>  ..  .. .. .. .. .. .. .. ..@ NAMES          : NULL #>  ..  .. .. .. .. .. .. .. ..@ elementType    : chr \"ANY\" #>  ..  .. .. .. .. .. .. .. ..@ elementMetadata: NULL #>  ..  .. .. .. .. .. .. .. ..@ metadata       : list() #>  ..  .. .. .. .. .. ..@ strand         :Formal class 'Rle' [package \"S4Vectors\"] with 4 slots #>  ..  .. .. .. .. .. .. .. ..@ values         : Factor w/ 3 levels \"+\",\"-\",\"*\":  #>  ..  .. .. .. .. .. .. .. ..@ lengths        : int(0)  #>  ..  .. .. .. .. .. .. .. ..@ elementMetadata: NULL #>  ..  .. .. .. .. .. .. .. ..@ metadata       : list() #>  ..  .. .. .. .. .. ..@ seqinfo        :Formal class 'Seqinfo' [package \"GenomeInfoDb\"] with 4 slots #>  ..  .. .. .. .. .. .. .. ..@ seqnames   : chr(0)  #>  ..  .. .. .. .. .. .. .. ..@ seqlengths : int(0)  #>  ..  .. .. .. .. .. .. .. ..@ is_circular: logi(0)  #>  ..  .. .. .. .. .. .. .. ..@ genome     : chr(0)  #>  ..  .. .. .. .. .. ..@ elementMetadata:Formal class 'DFrame' [package \"S4Vectors\"] with 6 slots #>  ..  .. .. .. .. .. .. .. ..@ rownames       : NULL #>  ..  .. .. .. .. .. .. .. ..@ nrows          : int 0 #>  ..  .. .. .. .. .. .. .. ..@ elementType    : chr \"ANY\" #>  ..  .. .. .. .. .. .. .. ..@ elementMetadata: NULL #>  ..  .. .. .. .. .. .. .. ..@ metadata       : list() #>  ..  .. .. .. .. .. .. .. ..@ listData       : Named list() #>  ..  .. .. .. .. .. ..@ elementType    : chr \"ANY\" #>  ..  .. .. .. .. .. ..@ metadata       : list() #>  ..  .. .. .. ..@ elementMetadata:Formal class 'DFrame' [package \"S4Vectors\"] with 6 slots #>  ..  .. .. .. .. .. ..@ rownames       : NULL #>  ..  .. .. .. .. .. ..@ nrows          : int 58929 #>  ..  .. .. .. .. .. ..@ elementType    : chr \"ANY\" #>  ..  .. .. .. .. .. ..@ elementMetadata:Formal class 'DFrame' [package \"S4Vectors\"] with 6 slots #>  ..  .. .. .. .. .. .. .. ..@ rownames       : NULL #>  ..  .. .. .. .. .. .. .. ..@ nrows          : int 22 #>  ..  .. .. .. .. .. .. .. ..@ elementType    : chr \"ANY\" #>  ..  .. .. .. .. .. .. .. ..@ elementMetadata: NULL #>  ..  .. .. .. .. .. .. .. ..@ metadata       : list() #>  ..  .. .. .. .. .. .. .. ..@ listData       :List of 2 #>  ..  .. .. .. .. .. .. .. .. ..$ type       : chr [1:22] \"intermediate\" \"intermediate\" \"intermediate\" \"intermediate\" ... #>  ..  .. .. .. .. .. .. .. .. ..$ description: chr [1:22] \"mean of normalized counts for all samples\" \"variance of normalized counts for all samples\" \"all counts for a gene are zero\" \"gene-wise estimates of dispersion\" ... #>  ..  .. .. .. .. .. ..@ metadata       : list() #>  ..  .. .. .. .. .. ..@ listData       :List of 22 #>  ..  .. .. .. .. .. .. ..$ baseMean                                    : num [1:58929] 0 0 0 0 0 0 0 0 0 0 ... #>  ..  .. .. .. .. .. .. ..$ baseVar                                     : num [1:58929] 0 0 0 0 0 0 0 0 0 0 ... #>  ..  .. .. .. .. .. .. ..$ allZero                                     : logi [1:58929] TRUE TRUE TRUE TRUE TRUE TRUE ... #>  ..  .. .. .. .. .. .. ..$ dispGeneEst                                 : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ dispGeneIter                                : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ dispFit                                     : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ dispersion                                  : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ dispIter                                    : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ dispOutlier                                 : logi [1:58929] NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ dispMAP                                     : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ Intercept                                   : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ condition_wildtype_vs_knockout              : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ SE_Intercept                                : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ SE_condition_wildtype_vs_knockout           : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ WaldStatistic_Intercept                     : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ WaldStatistic_condition_wildtype_vs_knockout: num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ WaldPvalue_Intercept                        : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ WaldPvalue_condition_wildtype_vs_knockout   : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ betaConv                                    : logi [1:58929] NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ betaIter                                    : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ deviance                                    : num [1:58929] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ maxCooks                                    : logi [1:58929] NA NA NA NA NA NA ... #>  ..  .. .. .. ..@ elementType    : chr \"GRanges\" #>  ..  .. .. .. ..@ metadata       : list() #>  ..  .. .. .. ..@ partitioning   :Formal class 'PartitioningByEnd' [package \"IRanges\"] with 5 slots #>  ..  .. .. .. .. .. ..@ end            : int [1:58929] 0 0 0 0 0 0 0 0 0 0 ... #>  ..  .. .. .. .. .. ..@ NAMES          : chr [1:58929] \"ENSG00000121410.11\" \"ENSG00000268895.5\" \"ENSG00000148584.15\" \"ENSG00000175899.14\" ... #>  ..  .. .. .. .. .. ..@ elementType    : chr \"ANY\" #>  ..  .. .. .. .. .. ..@ elementMetadata: NULL #>  ..  .. .. .. .. .. ..@ metadata       : list() #>  ..  .. ..@ colData           :Formal class 'DFrame' [package \"S4Vectors\"] with 6 slots #>  ..  .. .. .. ..@ rownames       : chr [1:4] \"KO_S3\" \"KO_S4\" \"WT_S1\" \"WT_S2\" #>  ..  .. .. .. ..@ nrows          : int 4 #>  ..  .. .. .. ..@ elementType    : chr \"ANY\" #>  ..  .. .. .. ..@ elementMetadata:Formal class 'DFrame' [package \"S4Vectors\"] with 6 slots #>  ..  .. .. .. .. .. ..@ rownames       : NULL #>  ..  .. .. .. .. .. ..@ nrows          : int 2 #>  ..  .. .. .. .. .. ..@ elementType    : chr \"ANY\" #>  ..  .. .. .. .. .. ..@ elementMetadata: NULL #>  ..  .. .. .. .. .. ..@ metadata       : list() #>  ..  .. .. .. .. .. ..@ listData       :List of 2 #>  ..  .. .. .. .. .. .. ..$ type       : chr [1:2] \"input\" \"intermediate\" #>  ..  .. .. .. .. .. .. ..$ description: chr [1:2] \"\" \"a scaling factor for columns\" #>  ..  .. .. .. ..@ metadata       : list() #>  ..  .. .. .. ..@ listData       :List of 2 #>  ..  .. .. .. .. ..$ condition : Factor w/ 2 levels \"knockout\",\"wildtype\": 1 1 2 2 #>  ..  .. .. .. .. ..$ sizeFactor: Named num [1:4] 0.76 0.719 1.245 1.682 #>  ..  .. .. .. .. .. ..- attr(*, \"names\")= chr [1:4] \"KO_S3\" \"KO_S4\" \"WT_S1\" \"WT_S2\" #>  ..  .. ..@ assays            :Formal class 'SimpleAssays' [package \"SummarizedExperiment\"] with 1 slot #>  ..  .. .. .. ..@ data:Formal class 'SimpleList' [package \"S4Vectors\"] with 4 slots #>  ..  .. .. .. .. .. ..@ listData       :List of 4 #>  ..  .. .. .. .. .. .. ..$ counts: int [1:58929, 1:4] 0 0 0 0 0 0 0 0 0 0 ... #>  ..  .. .. .. .. .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>  ..  .. .. .. .. .. .. .. .. ..$ : chr [1:58929] \"ENSG00000121410.11\" \"ENSG00000268895.5\" \"ENSG00000148584.15\" \"ENSG00000175899.14\" ... #>  ..  .. .. .. .. .. .. .. .. ..$ : chr [1:4] \"KO_S3\" \"KO_S4\" \"WT_S1\" \"WT_S2\" #>  ..  .. .. .. .. .. .. ..$ mu    : num [1:58929, 1:4] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ H     : num [1:58929, 1:4] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. .. ..$ cooks : num [1:58929, 1:4] NA NA NA NA NA NA NA NA NA NA ... #>  ..  .. .. .. .. .. ..@ elementType    : chr \"ANY\" #>  ..  .. .. .. .. .. ..@ elementMetadata: NULL #>  ..  .. .. .. .. .. ..@ metadata       : list() #>  ..  .. ..@ NAMES             : NULL #>  ..  .. ..@ elementMetadata   :Formal class 'DFrame' [package \"S4Vectors\"] with 6 slots #>  ..  .. .. .. ..@ rownames       : NULL #>  ..  .. .. .. ..@ nrows          : int 58929 #>  ..  .. .. .. ..@ elementType    : chr \"ANY\" #>  ..  .. .. .. ..@ elementMetadata: NULL #>  ..  .. .. .. ..@ metadata       : list() #>  ..  .. .. .. ..@ listData       : Named list() #>  ..  .. ..@ metadata          :List of 1 #>  ..  .. .. ..$ version:Classes 'package_version', 'numeric_version'  hidden list of 1 #>  ..  .. .. .. ..$ : int [1:3] 1 42 0 #>  ..  .. ..$ betaPrior      : logi FALSE #>  ..  .. ..$ modelMatrixType: chr \"standard\" #>  ..  .. ..$ betaPriorVar   : num [1:2] 1e+06 1e+06 #>  ..  .. ..$ modelMatrix    : num [1:4, 1:2] 1 1 1 1 0 0 1 1 #>  ..  .. .. ..- attr(*, \"dimnames\")=List of 2 #>  ..  .. .. .. ..$ : chr [1:4] \"KO_S3\" \"KO_S4\" \"WT_S1\" \"WT_S2\" #>  ..  .. .. .. ..$ : chr [1:2] \"Intercept\" \"condition_wildtype_vs_knockout\" #>  ..  .. .. ..- attr(*, \"assign\")= int [1:2] 0 1 #>  ..  .. .. ..- attr(*, \"contrasts\")=List of 1 #>  ..  .. .. .. ..$ condition: chr \"contr.treatment\" #>  ..  .. ..$ test           : chr \"Wald\" #>  ..  .. ..$ dispModelMatrix: num [1:4, 1:2] 1 1 1 1 0 0 1 1 #>  ..  .. .. ..- attr(*, \"dimnames\")=List of 2 #>  ..  .. .. .. ..$ : chr [1:4] \"KO_S3\" \"KO_S4\" \"WT_S1\" \"WT_S2\" #>  ..  .. .. .. ..$ : chr [1:2] \"(Intercept)\" \"conditionwildtype\" #>  ..  .. .. ..- attr(*, \"assign\")= int [1:2] 0 1 #>  ..  .. .. ..- attr(*, \"contrasts\")=List of 1 #>  ..  .. .. .. ..$ condition: chr \"contr.treatment\""},{"path":"https://ccbr.github.io/reneeTools/news/index.html","id":"reneetools-010","dir":"Changelog","previous_headings":"","what":"reneeTools 0.1.0","title":"reneeTools 0.1.0","text":"Create NEWS.md file track changes package.","code":""},{"path":"https://ccbr.github.io/reneeTools/news/index.html","id":"main-functions--classes-0-1-0","dir":"Changelog","previous_headings":"","what":"Main functions & classes","title":"reneeTools 0.1.0","text":"reneeDataSetFromFiles() (#16) reneeDataSetFromDataFrames() (#16) run_deseq2() (#16) filter_low_counts() (#10)","code":""}]
